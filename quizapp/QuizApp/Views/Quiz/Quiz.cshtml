@model QuizApp.ViewModel.Managing.TestingUrlViewModel

@{
    ViewBag.Title = "Quiz";
    //Layout = "~/Views/Shared/_QuizLayout.cshtml";
}

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

    <script src="/Scripts/jquery-1.10.2.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-debug.js"></script>*@
</head>
<body>

    <h2>Quiz</h2>

    <div class="container">

        <form class="quiz">
            @*// class="quiz"*@

            

            

        </form>

    </div>

    @using (Html.BeginForm())
    {
        @*@Html.AntiForgeryToken()*@ // мб оце попробую закоментувати.

        <div class="form-horizontal">

            <h4>TestingUrlViewModel</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.Guid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Guid, new { htmlAttributes = new { @class = "form-control", @Disabled = "disabled", @Id = "test" } })
                    @Html.ValidationMessageFor(model => model.Guid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TestGuid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TestGuid, new { htmlAttributes = new { @class = "form-control", @Disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.TestGuid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TestName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TestName, new { htmlAttributes = new { @class = "form-control", @Disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.TestName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Interviewee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Interviewee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Interviewee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumberOfRuns, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumberOfRuns, new { htmlAttributes = new { @class = "form-control", @Disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.NumberOfRuns, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AllowedStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AllowedStartDate, new { htmlAttributes = new { @class = "form-control", @Disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.AllowedStartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AllowedEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AllowedEndDate, new { htmlAttributes = new { @class = "form-control", @Disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.AllowedEndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    @*<input href="#" type="submit" value="Start TEST" class="btn btn-default" onclick="return StartTest();" />*@

                    @*<input href="#" type="submit" value="Start TEST" id="buttonUpload" class="btn btn-default"/>*@
                    @*href="#"*@
                    <a id="buttonUpload" class="btn btn-info btn-lg">Start TEST</a>

                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

</body>
</html>


@section scripts
{
    <script type="text/javascript">

        $(document).ready(function() {
            $("#buttonUpload").click(function() {
                var getGuid =
                {
                    testingUrlGuid: $('#test').val()
                };

                $.ajax({
                    data: getGuid,
                    url: "/Quiz/GetInfoAndStartTest",
                    type: "GET",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",

                    
                    success: function(results) { // вешаем свой обработчик на функцию success
                        debugger;



                        for (var i = 0; i < results.Questions.length; i++)
                        {
                            
                           
                            $('.quiz').append($("</br></br></br>")).append($("<div></div>").text(results.Questions[i].Instance)).append($("<div></div>").text(results.Questions[i].Hint)).append($("</br>"))
                                .append($().text(results.Questions[i].Answers)).append($("</br>"));


                            for (var j = 0; j < results.Questions[i].Answers.length; j++) {

                                //<label class="radiocontainer"></label>

                                // в чекбоксі треба функцію, яка покліку буде робити тру:
                                $('.quiz').append($("<input type='checkbox'>").text(results.Questions[i].Answers[j].IsSelected));

                                $('.quiz').append($("<span></span>").text(results.Questions[i].Answers[j].Instance)).append($("</br>"));

                                //$('.quiz').append($("<div></div>").text(results.Questions[i].Answers[j].Instance)).append($("</br>"));
                            }


                            $('.quiz').append($("<hr/>"));
                            // ТУТ ЩЕ КНОПКА FINISH TEST
                        }
                    }
                });
            });
        });


        //var posts = JSON.stringify(results);
        //console.log(results);

        //var html = '';
        //$.each(posts, function (key, item) {

                            
        //        html += '<tr>';
        //        html += '<td>' + item.Instance + '</td>';
        //        html += '<td>' + item.QuestionsTimeLimit + '</td>';
        //        html += '<td>' + item.Questions + '</td>';
        //        html += '<td>' + item.AttemptGuid + '</td>';

        //        //html +=
        //        //    `<td><a href="#" onclick="return DeleteQuestion('${item.Guid}')">Delete</a></td>`;
        //        html += '</tr>';

        //});
        //$('.quiz').html(html);

        //$(document).ready(function() {
        //    $("#buttonUpload").click(function() {
        //        var getGuid =
        //        {
        //            testingUrlGuid: $('#test').val()
        //        };

        //        $.ajax({
        //            data: getGuid,
        //            url: "/Quiz/GetInfoAndStartTest",
        //            type: "GET",
        //            contentType: "application/json;charset=utf-8",
        //            dataType: "json",

        //            //cache: true,
        //            success: function(data) { // вешаем свой обработчик на функцию success
        //                debugger;
        //                var response = JSON.stringify(data);
        //                console.log("Response:", response);

        //                if (response)
        //                {
        //                    var html = '';
        //                    $.each(response,
        //                        function(key, items) {
        //                            html += '<tr>';
        //                            html += '<td>' + items.AttemptGuid + '</td>';

        //                            //html +=
        //                            //    `<td><a href="#" onclick="return DeleteQuestion('${items.Guid}')">Delete</a></td>`;
        //                            html += '</tr>';
        //                        });
        //                    $('.quiz').html(html);
        //                }
        //            }
        //        });
        //    });
        //});

    </script>
}